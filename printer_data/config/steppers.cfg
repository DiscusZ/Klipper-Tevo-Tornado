[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
# For TMC2208 at 1/16 microsteps with 80 steps/mm
# Don't use a calibrated value, use the theorical value only otherwise 
# the TMC2208 may stop working while printing
# rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>
# rotation_distance = 200 * 16 / 80
rotation_distance:39.93 # 40
endstop_pin: ^!PE5
position_endstop: 0
position_max: 400
position_min: -15

homing_speed: 60

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
## For TMC2208 at 1/16 microsteps with 80 steps/mm
## Don't use a calibrated value, use the theorical value only otherwise 
## the TMC2208 may stop working while printing
## rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>
## rotation_distance = 200 * 16 / 80
rotation_distance: 39.81# 40
endstop_pin: ^!PJ1
position_endstop: 0
position_max: 400
position_min: -15
homing_speed: 60

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
## For TMC2208 at 1/16 microsteps with 400 steps/mm
## Don't use a calibrated value, use the theorical value only otherwise 
## the TMC2208 may stop working while printing
## rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>
## rotation_distance = 200 * 16 / 400
rotation_distance: 8  ##  4 or 8
endstop_pin: probe:z_virtual_endstop
position_max: 400
homing_speed: 50
position_min: -10


# TMC2208 UART configuration
#[tmc2208 stepper_x]
#uart_pin: PK1
# tx_pin aka the pin with the 1K resistor
#tx_pin: PG1
#run_current: 0.600
#stealthchop_threshold: 260

#[tmc2208 stepper_y]
#art_pin: PK2
# tx_pin aka the pin with the 1K resistor
#tx_pin: PF5
#run_current: 0.600
#stealthchop_threshold: 260

#[tmc2208 stepper_z]
#uart_pin: PK3
## tx_pin aka the pin with the 1K resistor
#tx_pin: PL7
#run_current: 0.600
#stealthchop_threshold: 30
